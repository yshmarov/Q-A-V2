---
version: 2
jobs:
  build:
    parallelism: 2
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          RAILS_ENV: test
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: q_and_a
          POSTGRES_DB: q_and_a
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - askdemos-bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install --deployment

      # Store bundle cache
      - save_cache:
          key: askdemos-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}

      # Which version of node?
      - run:
          name: Which node?
          command: node -v

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database setup
          command: bundle exec rake db:create db:schema:load --trace

      # Run rspec
      - run:
          name: Run rspec
          command: bundle exec rspec

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
